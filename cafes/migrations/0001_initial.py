# Generated by Django 4.2.13 on 2024-06-24 19:17

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Updated_at')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Локация')),
                ('address', models.CharField(max_length=256, verbose_name='Адрес кафе')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CREATED_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Кафе',
                'verbose_name_plural': 'Кафе',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CafeDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafe_departments', to='cafes.cafe')),
            ],
            options={
                'verbose_name': 'Кафе/Отдел',
                'verbose_name_plural': 'Кафе/Отделы',
            },
        ),
        migrations.CreateModel(
            name='CafeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_cafe', to='cafes.cafe', verbose_name='Кафе')),
            ],
            options={
                'verbose_name': 'Товары кафе',
                'verbose_name_plural': 'Товары кафе',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(verbose_name='Код')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('cooking_time', models.IntegerField(verbose_name='Время приготовления(мин)')),
            ],
            options={
                'verbose_name': 'Категория товаров',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название отдела')),
                ('description', models.TextField(verbose_name='Описание отдела')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees_info', to='cafes.cafe')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees_info', to='cafes.cafedepartment')),
            ],
            options={
                'verbose_name': 'Сотрудник кафе',
                'verbose_name_plural': 'Сотрудники кафе',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Локация')),
                ('order_date', models.DateField(auto_now_add=True, verbose_name='Дата заказа')),
                ('order_time', models.TimeField(auto_now_add=True, verbose_name='Время заказа')),
                ('nearest_cafe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cafes.cafe', verbose_name='Ближайшее кафе')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(verbose_name='Код')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказов',
            },
        ),
        migrations.CreateModel(
            name='Replacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_start', models.DateTimeField(verbose_name='Дата и время начала смены')),
                ('time_end', models.DateTimeField(verbose_name='Дата и время конца смены')),
                ('department', models.ManyToManyField(to='cafes.department', verbose_name='Отделы')),
            ],
            options={
                'verbose_name': 'Смена',
                'verbose_name_plural': 'Смены',
            },
        ),
        migrations.CreateModel(
            name='ReplacementStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(verbose_name='Код')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус смены',
                'verbose_name_plural': 'Статусы смены',
            },
        ),
        migrations.CreateModel(
            name='ReplacementMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_replacements', to='cafes.employee')),
                ('replacement', models.ManyToManyField(to='cafes.replacement', verbose_name='Смены')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cafes.replacementstatus', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Участник смены',
                'verbose_name_plural': 'Участники смены',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('cafe', models.ManyToManyField(through='cafes.CafeProduct', to='cafes.cafe', verbose_name='Кафе')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='category_products', to='cafes.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название должности')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions_department', to='cafes.department', verbose_name='Отдел')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='cafes.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_orders', to='cafes.product')),
            ],
            options={
                'verbose_name': 'Продукт заказа',
                'verbose_name_plural': 'Продукты заказов',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(related_name='order_products', through='cafes.OrderProduct', to='cafes.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='position_employees', to='cafes.position', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafes_info', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Количество')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='cafes.cart', verbose_name='Корзина пользователя')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_carts', to='cafes.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Корзина с продуктами',
                'verbose_name_plural': 'Корзины с продуктами',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(through='cafes.CartProduct', to='cafes.product', verbose_name='Продукты'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_cart', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cafeproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafe_products', to='cafes.product', verbose_name='Продукты'),
        ),
        migrations.AddField(
            model_name='cafedepartment',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafe_departments', to='cafes.department', verbose_name='Название отдела'),
        ),
        migrations.AddField(
            model_name='cafedepartment',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='departments_manager', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер'),
        ),
        migrations.AddField(
            model_name='cafedepartment',
            name='members',
            field=models.ManyToManyField(related_name='departments_members', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудники отдела'),
        ),
        migrations.AddField(
            model_name='cafe',
            name='departments',
            field=models.ManyToManyField(blank=True, through='cafes.CafeDepartment', to='cafes.department', verbose_name='Отделы'),
        ),
        migrations.AddField(
            model_name='cafe',
            name='employees',
            field=models.ManyToManyField(blank=True, related_name='cafes_employees', through='cafes.Employee', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудники'),
        ),
        migrations.AddField(
            model_name='cafe',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='cafes_owners', to=settings.AUTH_USER_MODEL, verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='cafe',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddConstraint(
            model_name='cafedepartment',
            constraint=models.UniqueConstraint(fields=('department', 'manager'), name='unique_department_manager'),
        ),
        migrations.AlterUniqueTogether(
            name='cafe',
            unique_together={('name', 'location')},
        ),
    ]
